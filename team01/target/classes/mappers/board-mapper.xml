<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper			
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"			
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kh.ex01.mappers.board">

<!-- 자유게시판 -->

	<select id="freeList" resultType="BoardVo">
		select * from
				(select rownum rnum, a.* from
				(select * from tbl_board where bcate = 'f' order by bno desc) a) 
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<select id="getBoard" resultType="BoardVo">
		select * from tbl_board
		where bno = #{bno}
	</select>
	
	<select id="getCount_f" resultType="int">
		select count(*) from tbl_board
		where bcate = 'f'
	</select>
	
	<insert id="insertBoard">
		insert into tbl_board(bno, bcate, title, content, userid, regdate, username)
		values(seq_bno.nextval, 'f', #{title}, #{content}, #{userid}, sysdate, #{username})
	</insert>
	
	<select id="menuMove" resultType="BoardVo">
		select next,prev 
			from (
			    select bno, 
			    lead(bno,1) over(order by bno) as next, 
			    lag(bno,1) over(order by bno) as prev from tbl_board
			)
		where bno = #{bno}
	</select>
	
<!-- 	<select id="menuMove2" resultType="BoardVo"> -->
<!-- 		select * from tbl_board  -->
<!-- 		where bno = (select max(bno)  -->
<!-- 		from tbl_board where bno &lt; #{bno}) -->
<!-- 	</select> -->
	
	<delete id="deleteBoard">
		delete from tbl_board
		where bno = #{bno}
	</delete>
	
	<update id="modifyBoard">
		update tbl_board set
			title = #{title},
			content = #{content}
		where bno = #{bno}
	</update>
	
	<update id="updateViewcnt">
		update tbl_board set
			viewcnt = viewcnt + 1
		where bno = #{bno}
	</update>
	
<!-- 익명게시판 -->
	<select id="anonymousList" resultType="BoardVo">
		select * from
				(select rownum rnum, a.* from
				(select * from tbl_board where bcate = 'a' order by bno desc) a) 
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<insert id="insertAnonymousBoard">
		insert into tbl_board(bno, bcate, title, content, userid, regdate, username)
		values(seq_bno.nextval, 'a', #{title}, #{content}, #{userid}, sysdate, #{username})
	</insert>
	
	<select id="getCount_a" resultType="int">
		select count(*) from tbl_board
		where bcate = 'a'
	</select>
	
<!-- 채용공고등록 -->	
	<insert id="insertHireBoard">
		insert into tbl_hireboard(bno, cate, title, content, regdate, writer)
		values(seq_bno.nextval, #{cate}, #{title}, #{content}, sysdate, '관리자')
	</insert>
	
	

<!-- 공지 게시판	 -->
	<!-- 시퀀스 얻기 -->
	<select id="getBnoSeq" resultType="int">
		SELECT seq_bno.nextval FROM dual
	</select>

	<!-- 전체 공지 리스트 -->
	<select id="noticeList" resultType="BoardVo">
	SELECT B.bno, M.userid AS userid, M.username, B.title, B.content, B.regdate, B.viewcnt, B.bcate, B.cmtcnt
	FROM ( SELECT rownum rnum, a.* FROM ( SELECT * FROM tbl_board WHERE bcate = 'n'
	<include refid="search"></include>
	ORDER BY bno DESC) a) B, tbl_member M
	WHERE rnum between #{startRow} and #{endRow}
	AND M.userid = B.userid

		
	</select>
	<!-- 공지글 리스트 개수 -->
	<select id="getNoticeCount" resultType="int">
		SELECT COUNT(*) FROM tbl_board WHERE bcate = 'n'
		<include refid="search"></include>
	</select>
	<!-- 공지 등록 실행 -->
	<insert id="noticeRegistRun">
		INSERT INTO tbl_board (bno, bcate, title, content, userid)
		VALUES (#{bno}, 'n', #{title}, #{content}, #{userid}) 
	</insert>
	<!-- 공지 내용 뷰 -->
	<select id="noticeContent" resultType="BoardVo">
		SELECT B.bno, B.bcate, B.title, B.content, B.userid, B.viewcnt, B.re_group, B.re_seq, B.re_level, B.regdate AS regdate, B.updatedate AS updatedate, B.cmtcnt, B.bstate, M.username
		FROM tbl_board B, tbl_member M
		WHERE B.bno = #{bno} AND B.userid = M.userid
	</select>
	<!-- 공지 삭제 실행 -->
	<delete id="noticeDeleteRun">
		DELETE FROM tbl_board
		WHERE bno = #{bno}
	</delete>
	<!-- 첨부 파일 삭제 -->
	<delete id="fileDeleteRun">
		DELETE FROM tbl_uploadfile
		WHERE bno = #{bno}
	</delete>
	<!-- 공지 내용 수정 -->
	<update id="noticeModifyRun">
		UPDATE tbl_board
		SET content = #{content}, title = #{title}
		WHERE bno = #{bno}
	</update>
	<!-- 파일 업로드 -->
	<insert id="uploadBoardFile">
		INSERT INTO tbl_uploadfile (bno, filename)
		VALUES (#{bno}, #{filename})
	</insert>
	
	<select id="downloadBoardFile" resultType="String">
		SELECT filename FROM tbl_uploadfile
		WHERE bno = #{bno}
	</select>
	
<!-- 자료실 -->
	<select id="libraryList" resultType="BoardVo">
		select * from
				(select rownum rnum, a.* from
				(select * from tbl_board where bcate = 'l' order by bno desc) a) 
		where rnum between #{startRow} and #{endRow}
	</select>
	
	<insert id="insertLibraryBoard">
		insert into tbl_board(bno, bcate, title, content, userid, regdate, username)
		values(seq_bno.nextval, 'l', #{title}, #{content}, #{userid}, sysdate, #{username})
	</insert>
	
	
	<select id="getCount_l" resultType="int">
		select count(*) from tbl_board
		where bcate = 'l'
	</select>
	

	<sql id="search">
				<if test="keyword != null || searchType != null">
			<choose>
				<when test='searchType == "t"'>
					AND title LIKE '%' || #{keyword} || '%'
				</when>
				<when test='searchType == "c"'>
					AND content LIKE '%' || #{keyword} || '%'
				</when>
				<when test='searchType == "tc"'>
					AND title LIKE '%' || #{keyword} || '%' OR content LIKE '%' || #{keyword} || '%'
				</when>
			</choose>
		</if>

	</sql>
	
</mapper>